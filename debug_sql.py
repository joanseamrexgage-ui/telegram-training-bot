#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ SQL –æ—à–∏–±–∫–∏ —Å admin_logs
"""

import asyncio
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from sqlalchemy import text, select
from database.models import AdminLog
from config import Config

async def test_admin_logs_query():
    """–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SQL –¥–ª—è admin_logs"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SQL –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª—è admin_logs...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –∑–∞–ø—Ä–æ—Å–æ–≤
        print("\n1. –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å —Å admin_id:")
        query1 = select(AdminLog).where(AdminLog.admin_id == 1)
        print(f"   SQL: {query1}")
        
        print("\n2. –ó–∞–ø—Ä–æ—Å —Å –¥–µ–π—Å—Ç–≤–∏–µ–º:")
        query2 = select(AdminLog).where(AdminLog.action == "test")
        print(f"   SQL: {query2}")
        
        print("\n3. –°–ª–æ–∂–Ω—ã–π –∑–∞–ø—Ä–æ—Å:")
        from datetime import datetime, timedelta
        cutoff_date = datetime.utcnow() - timedelta(days=30)
        query3 = (select(AdminLog)
                 .where(AdminLog.timestamp >= cutoff_date)
                 .where(AdminLog.admin_id == 1)
                 .where(AdminLog.action == "test"))
        print(f"   SQL: {query3}")
        
        print("\n4. –¢–µ—Å—Ç raw SQL:")
        raw_query = "SELECT * FROM admin_logs WHERE admin_id = ?"
        print(f"   Raw SQL: {raw_query}")
        
        print("\n5. –¢–µ—Å—Ç SQLAlchemy text() —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:")
        # –ü–æ–ø—Ä–æ–±—É–µ–º —Å–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫—É
        from sqlalchemy import text
        test_query = text("SELECT * FROM admin_logs WHERE admin_id = ?")
        print(f"   Text query: {test_query}")
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_admin_logs_query())
