# ==============================================================================
# PRODUCTION ENVIRONMENT CONFIGURATION TEMPLATE
# telegram-training-bot v3.2 - Enterprise Production Ready
# ==============================================================================
#
# This is a template file for production deployment configuration.
# Copy this file to .env.production and fill in the actual values.
#
# SECURITY WARNING:
# - Never commit .env.production to version control
# - Use strong, unique passwords for all services
# - Regularly rotate passwords and tokens
# - Limit access to production environment files
#
# ==============================================================================

# ==============================================================================
# BOT CONFIGURATION
# ==============================================================================

# Telegram Bot Token (from @BotFather)
# Example: 1234567890:ABCdefGHijklMNopQRstUVwxyz
BOT_TOKEN=YOUR_BOT_TOKEN_HERE

# Bot Environment
ENVIRONMENT=production

# Bot Display Name
BOT_NAME="Training Bot Pro"

# Webhook Configuration (if using webhooks instead of polling)
# WEBHOOK_URL=https://yourdomain.com/webhook
# WEBHOOK_PORT=8443

# ==============================================================================
# REDIS SENTINEL CONFIGURATION
# ==============================================================================

# Redis Sentinel Cluster Configuration
# Multiple sentinel nodes for high availability
REDIS_SENTINEL_NODES=redis-sentinel-1:26379,redis-sentinel-2:26380,redis-sentinel-3:26381

# Redis Master Name (must match sentinel configuration)
REDIS_MASTER_NAME=telegram-bot-master

# Redis Authentication
REDIS_PASSWORD=CHANGE_THIS_TO_SECURE_PASSWORD_2025

# Redis Database Separation
REDIS_FSM_DB=0          # FSM states and user sessions
REDIS_THROTTLE_DB=1     # Rate limiting and throttling
REDIS_AUTH_DB=2         # Authentication and security data
REDIS_CACHE_DB=3        # General caching

# Redis Connection Pool Settings
REDIS_MAX_CONNECTIONS=50
REDIS_MIN_CONNECTIONS=5
REDIS_SOCKET_TIMEOUT=5.0
REDIS_SOCKET_CONNECT_TIMEOUT=3.0

# Redis Circuit Breaker (for failover resilience)
REDIS_CIRCUIT_BREAKER_ENABLED=true
REDIS_CIRCUIT_BREAKER_FAILURE_THRESHOLD=5
REDIS_CIRCUIT_BREAKER_TIMEOUT=60

# Redis Performance Settings
REDIS_RETRY_ON_TIMEOUT=true
REDIS_HEALTH_CHECK_INTERVAL=30

# ==============================================================================
# DATABASE CONFIGURATION
# ==============================================================================

# Primary Database URL (PostgreSQL recommended for production)
# PostgreSQL: postgresql://username:password@host:port/database
# SQLite (not recommended for production): sqlite:///./training_bot.db
DATABASE_URL=postgresql://botuser:CHANGE_DATABASE_PASSWORD@localhost:5432/training_bot

# Database Connection Pool Settings
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=30
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=3600

# Database Performance
DB_ECHO=false                    # Set to true for SQL query logging (debug only)
DB_ECHO_POOL=false              # Set to true for connection pool logging

# ==============================================================================
# ADMIN CONFIGURATION
# ==============================================================================

# Admin User ID (your Telegram user ID)
# Get your user ID by messaging @userinfobot
ADMIN_USER_ID=YOUR_TELEGRAM_USER_ID

# Admin Password (for admin panel access)
# Use a strong, unique password
ADMIN_PASSWORD_HASH=$2b$12$CHANGE_THIS_TO_BCRYPT_HASH_OF_YOUR_PASSWORD

# Admin Session Settings
ADMIN_SESSION_TIMEOUT=3600      # 1 hour in seconds
ADMIN_MAX_LOGIN_ATTEMPTS=3
ADMIN_LOCKOUT_DURATION=1800     # 30 minutes in seconds

# ==============================================================================
# SECURITY CONFIGURATION
# ==============================================================================

# Rate Limiting (requests per minute per user)
RATE_LIMIT_REQUESTS=30
RATE_LIMIT_WINDOW=60            # seconds
RATE_LIMIT_BURST=5             # allowed burst requests

# Anti-Spam Settings
ANTI_SPAM_ENABLED=true
ANTI_SPAM_MESSAGE_LIMIT=10     # messages per minute
ANTI_SPAM_BAN_DURATION=3600    # 1 hour in seconds

# Input Sanitization
INPUT_SANITIZER_ENABLED=true
INPUT_MAX_LENGTH=1000          # maximum input length
INPUT_BLOCK_HTML=true          # block HTML tags
INPUT_BLOCK_SQL=true           # block SQL injection attempts

# Security Headers and Validation
SECURE_HEADERS_ENABLED=true
CSRF_PROTECTION_ENABLED=true

# ==============================================================================
# MONITORING AND OBSERVABILITY
# ==============================================================================

# Prometheus Metrics
METRICS_ENABLED=true
METRICS_PORT=8080
METRICS_PATH=/metrics

# Health Check Endpoint
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_PORT=8080
HEALTH_CHECK_PATH=/health

# Sentry Error Tracking (optional)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
# SENTRY_ENVIRONMENT=production
# SENTRY_SAMPLE_RATE=0.1

# Grafana/Prometheus Integration
MONITORING_ENABLED=true
PROMETHEUS_URL=http://localhost:9090
GRAFANA_URL=http://localhost:3000

# ==============================================================================
# LOGGING CONFIGURATION
# ==============================================================================

# Log Level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log Format
LOG_FORMAT=json                # json or text

# Log Files
LOG_FILE_ENABLED=true
LOG_FILE_PATH=./logs/bot.log
LOG_FILE_MAX_SIZE=100MB
LOG_FILE_BACKUP_COUNT=5

# Structured Logging
STRUCTURED_LOGGING=true
LOG_CORRELATION_ID=true

# Audit Logging (admin actions)
AUDIT_LOG_ENABLED=true
AUDIT_LOG_PATH=./logs/audit.log

# ==============================================================================
# PERFORMANCE SETTINGS
# ==============================================================================

# Concurrency Settings
MAX_CONCURRENT_UPDATES=100
UPDATE_QUEUE_SIZE=500
WORKER_TIMEOUT=300             # 5 minutes

# Memory Management
MAX_MEMORY_USAGE=1073741824    # 1GB in bytes
MEMORY_CHECK_INTERVAL=300      # 5 minutes

# Caching Settings
CACHE_ENABLED=true
CACHE_DEFAULT_TTL=3600         # 1 hour
CACHE_MAX_KEYS=10000

# File Upload Limits
MAX_FILE_SIZE=20971520         # 20MB in bytes
ALLOWED_FILE_TYPES=pdf,jpg,jpeg,png,gif,doc,docx

# ==============================================================================
# NOTIFICATION SETTINGS
# ==============================================================================

# Admin Notifications
ADMIN_NOTIFICATIONS_ENABLED=true
NOTIFY_ON_ERROR=true
NOTIFY_ON_HIGH_LOAD=true
NOTIFY_ON_SECURITY_EVENT=true

# Error Notification Thresholds
ERROR_THRESHOLD_RATE=10        # errors per minute
HIGH_LOAD_THRESHOLD=80         # CPU percentage
MEMORY_THRESHOLD=90            # Memory percentage

# ==============================================================================
# BACKUP AND DATA RETENTION
# ==============================================================================

# Automated Backups
BACKUP_ENABLED=true
BACKUP_INTERVAL=86400          # 24 hours in seconds
BACKUP_RETENTION_DAYS=30
BACKUP_LOCATION=./backups/

# Data Retention Policies
USER_ACTIVITY_RETENTION_DAYS=365
LOG_RETENTION_DAYS=90
METRICS_RETENTION_DAYS=180

# ==============================================================================
# DEPLOYMENT CONFIGURATION
# ==============================================================================

# Deployment Environment
DEPLOYMENT_ENV=production
DEPLOYMENT_VERSION=v3.2
DEPLOYMENT_BUILD_ID=BUILD_ID_HERE

# Docker Configuration
DOCKER_NETWORK=telegram-bot-network
DOCKER_RESTART_POLICY=unless-stopped

# Resource Limits
CONTAINER_MEMORY_LIMIT=2g
CONTAINER_CPU_LIMIT=2.0
CONTAINER_CPU_RESERVATION=0.5

# ==============================================================================
# SSL/TLS CONFIGURATION (if using HTTPS webhooks)
# ==============================================================================

# SSL Certificate Paths
# SSL_CERT_PATH=./ssl/cert.pem
# SSL_KEY_PATH=./ssl/key.pem
# SSL_CA_PATH=./ssl/ca.pem

# SSL Settings
# SSL_VERIFY=true
# SSL_MIN_VERSION=TLSv1.2

# ==============================================================================
# FEATURE FLAGS
# ==============================================================================

# Feature Toggle System
FEATURE_FLAGS_ENABLED=true

# Specific Features
FEATURE_ANALYTICS=true
FEATURE_ADVANCED_METRICS=true
FEATURE_AUTO_CLEANUP=true
FEATURE_CONTENT_MODERATION=true
FEATURE_MULTI_LANGUAGE=false
FEATURE_BETA_TESTING=false

# Experimental Features (disable in production)
FEATURE_DEBUG_MODE=false
FEATURE_DEVELOPMENT_TOOLS=false

# ==============================================================================
# THIRD-PARTY INTEGRATIONS
# ==============================================================================

# External API Configuration
# EXTERNAL_API_TIMEOUT=30
# EXTERNAL_API_RETRIES=3
# EXTERNAL_API_RATE_LIMIT=100

# Webhook Integrations
# WEBHOOK_SECRET_TOKEN=your-webhook-secret-here
# WEBHOOK_RETRY_ATTEMPTS=3
# WEBHOOK_TIMEOUT=10

# ==============================================================================
# DEVELOPMENT AND DEBUGGING (disable in production)
# ==============================================================================

# Debug Settings (DISABLE IN PRODUCTION)
DEBUG=false
DEBUG_SQL=false
DEBUG_REDIS=false
DEBUG_WEBHOOKS=false

# Profiling (DISABLE IN PRODUCTION)
PROFILING_ENABLED=false

# ==============================================================================
# CONFIGURATION VALIDATION
# ==============================================================================

# Configuration checks
CONFIG_VALIDATION_ENABLED=true
CONFIG_STRICT_MODE=true
CONFIG_FAIL_ON_MISSING=true

# Environment validation
REQUIRE_PRODUCTION_SETTINGS=true
VALIDATE_REDIS_CONNECTION=true
VALIDATE_DATABASE_CONNECTION=true
VALIDATE_BOT_TOKEN=true

# ==============================================================================
# NOTES FOR PRODUCTION DEPLOYMENT
# ==============================================================================
#
# 1. SECURITY CHECKLIST:
#    - Change ALL default passwords
#    - Use strong, unique passwords (minimum 16 characters)
#    - Enable all security features
#    - Set proper file permissions (600) for this file
#    - Use HTTPS for webhooks if applicable
#    - Enable firewall and proper network security
#
# 2. PERFORMANCE CHECKLIST:
#    - Configure Redis Sentinel for high availability
#    - Use PostgreSQL instead of SQLite
#    - Set appropriate resource limits
#    - Configure proper logging levels
#    - Enable monitoring and alerting
#
# 3. MONITORING CHECKLIST:
#    - Set up Prometheus metrics collection
#    - Configure Grafana dashboards
#    - Enable health checks
#    - Set up error alerting
#    - Configure log aggregation
#
# 4. BACKUP CHECKLIST:
#    - Enable automated backups
#    - Test backup restoration procedures
#    - Set appropriate retention policies
#    - Monitor backup success/failure
#
# 5. DEPLOYMENT CHECKLIST:
#    - Run ./scripts/validate_environment.sh
#    - Test Redis Sentinel cluster with ./scripts/test_failover.sh
#    - Verify all services start correctly
#    - Run integration tests
#    - Monitor application during initial deployment
#
# ==============================================================================