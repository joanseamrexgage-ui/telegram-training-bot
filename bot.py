"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞ Telegram-–±–æ—Ç–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —è–≤–ª—è–µ—Ç—Å—è —Ç–æ—á–∫–æ–π –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –û–Ω –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞:
- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤—Å–µ—Ö handlers –∏ middlewares
- –ù–∞—Å—Ç—Ä–æ–π–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
- –ó–∞–ø—É—Å–∫ polling
"""

import asyncio
import sys
from pathlib import Path

from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, str(Path(__file__).parent))

from config import load_config
from database.database import init_db, close_db
from handlers import start, general_info, sales, sport, admin, common
from middlewares.auth import AuthMiddleware
from middlewares.logging import LoggingMiddleware
from middlewares.throttling import ThrottlingMiddleware
from middlewares.errors import ErrorHandlingMiddleware  # VERSION 2.0
from utils.logger import logger
# PRODUCTION MONITORING: Sentry integration for error tracking
from utils.sentry_config import init_sentry


async def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.
    
    –í—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
    1. –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ .env
    2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    3. –°–æ–∑–¥–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä—ã Bot –∏ Dispatcher
    4. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç middlewares
    5. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç handlers
    6. –ó–∞–ø—É—Å–∫–∞–µ—Ç polling
    """
    
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤...")

    # PRODUCTION MONITORING: Initialize Sentry for error tracking
    init_sentry(
        enable_performance=True,
        enable_profiling=False,
        traces_sample_rate=0.1,  # Sample 10% of transactions
        profiles_sample_rate=0.0  # Disable profiling by default
    )

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    try:
        config = load_config()
        logger.info("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        logger.critical(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        sys.exit(1)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    # CRIT-002 FIX: Always pass config vars to init_db()
    try:
        await init_db(
            database_url=config.db.url,
            echo=config.db.echo
        )
        logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    except Exception as e:
        logger.critical(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        sys.exit(1)
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    bot = Bot(
        token=config.tg_bot.token,
        default=DefaultBotProperties(
            parse_mode=ParseMode.HTML  # –ò—Å–ø–æ–ª—å–∑—É–µ–º HTML –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        )
    )
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä —Å FSM —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º –≤ –ø–∞–º—è—Ç–∏
    dp = Dispatcher(storage=MemoryStorage())
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º middlewares (–ø–æ—Ä—è–¥–æ–∫ –≤–∞–∂–µ–Ω!)
    # 1. Throttling - –∑–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞ (–ø–µ—Ä–≤—ã–º, —á—Ç–æ–±—ã –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–Ω—å—à–µ)
    dp.message.middleware(ThrottlingMiddleware())
    dp.callback_query.middleware(ThrottlingMiddleware())

    # 2. Auth - –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    dp.message.middleware(AuthMiddleware())
    dp.callback_query.middleware(AuthMiddleware())

    # 3. Error Handling - –≥–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ (VERSION 2.0)
    dp.message.middleware(ErrorHandlingMiddleware())
    dp.callback_query.middleware(ErrorHandlingMiddleware())

    # 4. Logging - –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π (–ø–æ—Å–ª–µ–¥–Ω–∏–º, —á—Ç–æ–±—ã –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ)
    dp.message.middleware(LoggingMiddleware())
    dp.callback_query.middleware(LoggingMiddleware())

    logger.info("‚úÖ Middlewares –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handlers
    # –ü–æ—Ä—è–¥–æ–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏
    dp.include_router(start.router)
    dp.include_router(general_info.router)
    dp.include_router(sales.router)
    dp.include_router(sport.router)
    dp.include_router(admin.router)
    dp.include_router(common.router)  # –û–±—â–∏–µ handlers (–Ω–∞–∑–∞–¥, –ø–æ–º–æ—â—å) - –ü–û–°–õ–ï–î–ù–ò–ú–ò!
    
    logger.info("‚úÖ Handlers –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")

    # VERSION 2.0: –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    @dp.errors()
    async def global_error_handler(event, exception):
        """
        –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–ø–æ–π–º–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫

        –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –∫–æ–≥–¥–∞ –æ—à–∏–±–∫–∞ –Ω–µ –±—ã–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ middleware –∏–ª–∏ handler.
        –õ–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ Sentry.
        """
        from aiogram.types import Update, ErrorEvent

        logger.exception(
            f"üí• –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ:\n"
            f"  –¢–∏–ø: {type(exception).__name__}\n"
            f"  –°–æ–æ–±—â–µ–Ω–∏–µ: {str(exception)}\n"
            f"  Update: {event.update if hasattr(event, 'update') else 'N/A'}"
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Sentry –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
        try:
            from utils.sentry_config import capture_exception_with_context

            # –ò–∑–≤–ª–µ–∫–∞–µ–º user_id –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
            user_id = None
            if hasattr(event, 'update') and isinstance(event.update, Update):
                if event.update.message and event.update.message.from_user:
                    user_id = event.update.message.from_user.id
                elif event.update.callback_query and event.update.callback_query.from_user:
                    user_id = event.update.callback_query.from_user.id

            capture_exception_with_context(
                exception=exception,
                user_id=user_id,
                extra={
                    "event_type": type(event).__name__,
                    "update_id": event.update.update_id if hasattr(event, 'update') else None,
                }
            )
        except Exception as sentry_error:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Sentry: {sentry_error}")

        return True  # –ü–æ–º–µ—á–∞–µ–º –æ—à–∏–±–∫—É –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é

    logger.info("‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
    try:
        bot_info = await bot.get_me()
        logger.info(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: @{bot_info.username}")
        logger.info(f"   ID: {bot_info.id}")
        logger.info(f"   –ò–º—è: {bot_info.first_name}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ: {e}")
    
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    await bot.delete_webhook(drop_pending_updates=True)
    logger.info("‚úÖ –ù–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–ø—É—â–µ–Ω—ã")
    
    logger.info("=" * 50)
    logger.info("ü§ñ –ë–û–¢ –£–°–ü–ï–®–ù–û –ó–ê–ü–£–©–ï–ù –ò –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï")
    logger.info("=" * 50)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º polling (–±–æ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è)
        await dp.start_polling(
            bot,
            allowed_updates=dp.resolve_used_update_types()
        )
    except Exception as e:
        logger.critical(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞: {e}")
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ
        logger.info("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
        await close_db()
        await bot.session.close()
        logger.info("‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∑–∞–∫—Ä—ã—Ç—ã")


if __name__ == "__main__":
    """
    –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç asyncio.run() –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.
    """
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –≥–ª–∞–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
        asyncio.run(main())
    except KeyboardInterrupt:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º Ctrl+C –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        logger.info("‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ (Ctrl+C)")
        logger.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        # –õ–æ–≤–∏–º –ª—é–±—ã–µ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏
        logger.critical(f"üí• –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}", exc_info=True)
        sys.exit(1)
