[pytest]
# pytest configuration for telegram-training-bot
# Target: 85%+ test coverage for production readiness

addopts =
    -v
    --strict-markers
    --tb=short
    --maxfail=5
    --cov=.
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=json:coverage.json
    # Temporarily disable minimum coverage to run tests
    # --cov-fail-under=15
    --cov-branch

testpaths = tests

python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Coverage settings
[coverage:run]
source = .
omit =
    */tests/*
    */venv/*
    */__pycache__/*
    */site-packages/*
    */migrations/*
    */alembic/*
    setup.py
    */logs/*
    */media/*
    */content/*
    bot.py
    healthcheck.py
    generate_admin_hash.py
    debug_sql.py

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    TODO
    FIXME

[coverage:html]
directory = htmlcov

# Markers for test categories
markers =
    unit: Unit tests (fast, isolated, no external dependencies)
    integration: Integration tests (requires external services, databases, etc.)
    security: Security tests (auth, validation, injection, DoS)
    performance: Performance and load tests (latency, throughput, memory)
    e2e: End-to-end tests (full user workflows)
    slow: Tests that take >1 second
    asyncio: Async tests
    timeout: Timeout-specific tests
    middleware: Middleware pipeline tests
    regression: Regression tests for performance and functionality

# Asyncio settings
asyncio_mode = auto

# Timeout for tests
timeout = 300

# Warning filters
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning
    ignore::pytest.PytestCollectionWarning
    error::RuntimeWarning
    error::ResourceWarning

# Logging during tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Cache settings
cache_dir = .pytest_cache

# Minimal test requirements
minversion = 6.0
